{"version":3,"sources":["../src/controls.js"],"names":["define","Chart","init","ctx","document","getElementById","performanceEl","querySelector","performance","JSON","parse","dataset","labels","sets","attendance","effort","grades","TAGS","avgattendance","avgeffort","avggrades","i","p","length","console","year","details","toString","log","includes","push","label","data","fill","borderColor","tension","type","datasets","options","responsive","maintainAspectRatio","plugins","title","display","text","id","beforeDraw","chart","canvas","getContext","save","globalCompositeOperation","fillStyle","fillRect","width","height","restore"],"mappings":"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","sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   block_grades_effort_report\n * @copyright 2021 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['block_grades_effort_report/chart'], function (Chart) {\n\n    function init() {\n        const ctx = document.getElementById(\"trendChart\");\n        const performanceEl = document.querySelector(\"#performance\");\n        const performance = JSON.parse(performanceEl.dataset.performance);\n\n        let labels = [];\n        let sets = [];\n        let attendance = [];\n        let effort = [];\n        let grades = [];\n\n        const TAGS = {\n            avgattendance: 'Attend Average',\n            avgeffort: 'Effort Average',\n            avggrades: 'Grade Average'\n        }\n\n        for (let i = 0; i < performance.length; i++) {\n            var p = performance[i];\n            console\n            let year = p.details.year.toString();\n            console.log(\"Year\", p.details.year);\n            console.log(\"Details\", p.details.avggrades);\n\n            if (!labels.includes(year)) {\n                labels.push(year);\n            }\n\n            grades.push(p.details.avggrades);\n            effort.push(p.details.avgeffort)\n            attendance.push(p.details.avgattendance)\n\n        }\n\n        sets.push({\n            label: TAGS.avggrades,\n            data: grades,\n            fill: false,\n            borderColor: '#31326f',\n            tension: 0.1\n        });\n\n        sets.push({\n            label: TAGS.avgeffort,\n            data: effort,\n            fill: false,\n            borderColor: '#ffc93c',\n            tension: 0.1\n        });\n\n        sets.push({\n            label: TAGS.avgattendance,\n            data: attendance,\n            fill: false,\n            borderColor: '#1687a7',\n            tension: 0.1\n        });\n\n        const data = {\n            labels: labels,\n            datasets: sets\n        };\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                title: {\n                  display: true,\n                  text: 'Performance Trend',\n                }\n              }\n        }\n\n        const plugin = {\n            id: 'custom_canvas_background_color',\n            beforeDraw: (chart) => {\n              const ctx = chart.canvas.getContext('2d');\n              ctx.save();\n              ctx.globalCompositeOperation = 'destination-over';\n              ctx.fillStyle = '#f6f5f5';\n              ctx.fillRect(0, 0, chart.width, chart.height);\n              ctx.restore();\n            }\n          };\n\n\n\n        var myLineChart = new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: options,\n            plugins: [plugin]\n        });\n\n\n    }\n    return { init: init }\n});\n"],"file":"controls.min.js"}